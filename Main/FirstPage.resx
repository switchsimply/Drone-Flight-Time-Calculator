<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pnl1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>